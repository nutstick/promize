input ProductOrdering {
  sort: ProductSort!
  direction: Direction! = ASC
}

enum ProductSort {
  price
  originalPrice
  promotionStart
  promotionEnd
  createAt
  updateAt
}

# Edges for ProductQuery
type ProductEdges implements Edges {
  node: Product!
  cursor: ID!
}

# Product relay-style pagination query
type ProductPage implements Page {
  totalCount: Int!
  edges: [ProductEdges]
  pageInfo: PageInfo
}

enum ProductEnum {
  Product
  BuyNowProduct
}

type Color implements Node {
  _id: ID!
  color: String!
}

type Size implements Node {
  _id: ID!
  size: String!
}

type Category implements Node {
  _id: ID!
  category: String!
}

# Product
type Product implements Node {
  _id: ID!
  name: String!
  description: String

  originalPrice: Int
  type: ProductEnum!
  price: Int

  pictures: [String]!
  hashtags: [String]!
  colors: [Color]
  sizes: [Size]
  categories: [Category]

  promotionStart: Date!
  promotionEnd: Date!
  owner: CoSeller!

  createAt: Date!
  updateAt: Date!

  testHot: String!

  suggestProducts: [Product]
}
