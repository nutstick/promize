# Account data type
type Account {
  # Email
  email: String
  # Facebook access code
  facebookAccessCode: String
  # Google access code
  googleAccessCode: String
}

# Address type
type Address implements Node {
  _id: ID!
  # Address detail
  address: String!
  # City
  city: String!
  # Country
  country: String!
  # Zip code
  zip: String!
}

# Payment Method type
type PaymentMethod implements Node {
  _id: ID!
  # Credit card number
  creditCardNumber: String!
}

enum GenderEnum {
  male
  female
}

enum CoSellerRegisterStatus {
  IDLE
  PENDING
  APPROVED
}

# User interface
interface UserType {
  _id: ID!
  # First name
  firstName: String!
  # Middle name
  middleName: String
  # Last name
  lastName: String!
  # Gender
  gender: GenderEnum!
  # Telephone number
  telNumber: String
  # Account data
  account: Account
  # Addresses
  address(id: ID): Address
  addresses: [Address]
  # Paymethods
  paymentMethod(id: ID): PaymentMethod
  paymentMethods: [PaymentMethod]
  # User avatar
  avatar: String

  # Order receipts
  orderReceipts(
    first: Int,
    after: ID,
    last: Int,
    before: ID,
    orderBy: [OrderReceiptOrdering],
  ): OrderReceiptPage

  traderooms: [TradeRoom]
  traderoom(id: ID!): TradeRoom

  createAt: Date!
  updateAt: Date!
}

# User type
type User implements UserType, Node {
  _id: ID!
  # First name
  firstName: String!
  # Middle name
  middleName: String
  # Last name
  lastName: String!
  # Gender
  gender: GenderEnum!
  # Telephone number
  telNumber: String
  # Account data
  account: Account
  # Addresses
  address(id: ID): Address
  addresses: [Address]
  # Paymethods
  paymentMethod(id: ID): PaymentMethod
  paymentMethods: [PaymentMethod]
  # User avatar
  avatar: String

  # Citizen card image
  citizenCardImage: String

  # Order receipts
  orderReceipts(
    first: Int,
    after: ID,
    last: Int,
    before: ID,
    orderBy: [OrderReceiptOrdering],
  ): OrderReceiptPage

  coSellerRegisterStatus: CoSellerRegisterStatus!

  traderooms: [TradeRoom]
  traderoom(id: ID!): TradeRoom

  createAt: Date!
  updateAt: Date!
}

# Co-Seller type
type CoSeller implements UserType, Node {
  _id: ID!
  # First name
  firstName: String!
  # Middle name
  middleName: String
  # Last name
  lastName: String!
  # Gender
  gender: GenderEnum!
  # Telephone number
  telNumber: String
  # Account data
  account: Account
  # Addresses
  address(id: ID): Address
  addresses: [Address]
  # Paymethods
  paymentMethod(id: ID): PaymentMethod
  paymentMethods: [PaymentMethod]
  # User avatar
  avatar: String

  # Citizen card image
  citizenCardImage: String

  # Order receipts
  orderReceipts(
    first: Int,
    after: ID,
    last: Int,
    before: ID,
    orderBy: [OrderReceiptOrdering],
  ): OrderReceiptPage
  
  # CoSeller flag
  coseller: Boolean!
  # Products's Own
  products(
    first: Int,
    after: ID,
    last: Int,
    before: ID,
    orderBy: [OrderReceiptOrdering],
  ): ProductPage!

  # Buy order receipts with status
  buyOrderReceipts(
    first: Int,
    after: ID,
    last: Int,
    before: ID,
    orderBy: [OrderReceiptOrdering],
    status: OrderReceiptStatus,
  ): OrderReceiptPage

  # Count order receipts with status
  totalBuyOrderReceipts(status: OrderReceiptStatus): Int

  traderooms: [TradeRoom]
  traderoom(id: ID!): TradeRoom

  createAt: Date!
  updateAt: Date!
}


# Admin type
type Admin implements UserType, Node {
  _id: ID!
  # First name
  firstName: String!
  # Middle name
  middleName: String
  # Last name
  lastName: String!
  # Gender
  gender: GenderEnum!
  # Telephone number
  telNumber: String
  # Account data
  account: Account
  # Addresses
  address(id: ID): Address
  addresses: [Address]
  # Paymethods
  paymentMethod(id: ID): PaymentMethod
  paymentMethods: [PaymentMethod]
  # User avatar
  avatar: String

  traderooms: [TradeRoom]
  traderoom(id: ID!): TradeRoom

  # Order receipts
  orderReceipts(
    first: Int,
    after: ID,
    last: Int,
    before: ID,
    orderBy: [OrderReceiptOrdering],
  ): OrderReceiptPage
    
  traderooms: [TradeRoom]
  traderoom(id: ID!): TradeRoom

  admin: Boolean
  # Pending CoSellers
  pendingCoSellers: [User]

  createAt: Date!
  updateAt: Date!
}
